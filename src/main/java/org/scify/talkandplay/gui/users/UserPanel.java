/**
* Copyright 2016 SciFY
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.scify.talkandplay.gui.users;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import io.sentry.Sentry;
import org.scify.talkandplay.gui.MainFrame;
import org.scify.talkandplay.gui.MainPanel;
import org.scify.talkandplay.gui.helpers.GuiHelper;
import org.scify.talkandplay.gui.helpers.UIConstants;
import org.scify.talkandplay.models.User;
import org.scify.talkandplay.services.UserService;
import org.scify.talkandplay.utils.ResourceManager;
import org.scify.talkandplay.utils.ResourceType;

public class UserPanel extends javax.swing.JPanel {

    private MainFrame parent;
    private User user;
    private GuiHelper guiHelper;
    private UserService userService;
    private final ResourceManager rm;
    protected long timeOfInit;
    protected final int INTERVAL_AFTER_LOGIN = 1000;

    /**
     * Creates new form ProfilePanel
     */
    public User getUser() {
        return user;
    }

    public UserPanel(MainFrame mainFrame, User user, long timeOfInit) {
        this.parent = mainFrame;
        this.user = user;
        rm = ResourceManager.getInstance();
        this.guiHelper = new GuiHelper();
        this.userService = new UserService();
        this.timeOfInit = timeOfInit;
        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profilePanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        profilePanel.setBackground(new java.awt.Color(255, 255, 255));
        profilePanel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        add(profilePanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() {
        profilePanel.setLayout(new BoxLayout(profilePanel, BoxLayout.Y_AXIS));
        profilePanel.setBorder(new EmptyBorder(0, 0, 0, 20));
        JLabel imageLabel = new JLabel(guiHelper.getRoundIcon(user.getImage()));

        JPanel controlsPanel = new JPanel();
        controlsPanel.setBackground(Color.white);
        controlsPanel.setBorder(new EmptyBorder(5, 0, 0, 0));
        controlsPanel.setLayout(new BoxLayout(controlsPanel, BoxLayout.X_AXIS));
        JLabel editLabel = new JLabel(rm.getTextOfXMLTag("preferences"));
        JLabel deleteLabel = new JLabel(rm.getTextOfXMLTag("delete"));
        controlsPanel.add(editLabel);
        controlsPanel.add(Box.createRigidArea(new Dimension(10, 0)));
        controlsPanel.add(deleteLabel);

        JLabel nameLabel;
        if (userService.hasBrokenFiles(user.getName())) {
            nameLabel = new JLabel(user.getName(), rm.getImageIcon("warning.png", ResourceType.JAR), JLabel.RIGHT);
            nameLabel.setToolTipText(rm.getTextOfXMLTag("filesNotFound"));
        } else {
            nameLabel = new JLabel(user.getName());
        }
        nameLabel.setBorder(new EmptyBorder(5, 0, 0, 0));

        editLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                long timeOfClick = (new Date()).getTime();
                if (timeOfClick - timeOfInit > INTERVAL_AFTER_LOGIN) {
                    parent.changePanel(new UserFormPanel(parent, user));
                }
            }
        });

        deleteLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                long timeOfClick = (new Date()).getTime();
                if (timeOfClick - timeOfInit > INTERVAL_AFTER_LOGIN) {
                    int dialogResult = JOptionPane.showConfirmDialog(null, rm.getTextOfXMLTag("userDeleteConfirmation"), "Warning", 0);
                    if (dialogResult == JOptionPane.YES_OPTION) {
                        try {
                            userService.delete(user);
                            parent.changePanel(new MainPanel(parent, user.getUserOfAccount()));
                        } catch (Exception ex) {
                            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
                            Sentry.capture(ex.getMessage());
                        }
                    }
                }
            }
        });

        imageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        nameLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        nameLabel.setBorder(new EmptyBorder(5, 0, 0, 0));
        nameLabel.setFont(new Font(UIConstants.mainFont, Font.PLAIN, 16));
        editLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        editLabel.setBorder(new EmptyBorder(5, 0, 0, 0));
        editLabel.setFont(new Font(UIConstants.mainFont, Font.PLAIN, 12));
        editLabel.setForeground(Color.decode("#4BA145"));
        deleteLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        deleteLabel.setBorder(new EmptyBorder(5, 0, 0, 0));
        deleteLabel.setFont(new Font(UIConstants.mainFont, Font.PLAIN, 12));
        deleteLabel.setForeground(Color.decode("#AE001D"));

        profilePanel.add(imageLabel);
        profilePanel.add(nameLabel);
        profilePanel.add(controlsPanel);
    }

    public User getProfile() {
        return user;
    }

    public void setProfile(User user) {
        this.user = user;
    }

    public void update(String user) {
        //  nameLabel.setText(user);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel profilePanel;
    // End of variables declaration//GEN-END:variables
}
