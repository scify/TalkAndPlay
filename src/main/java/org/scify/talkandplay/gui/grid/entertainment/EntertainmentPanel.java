/**
* Copyright 2016 SciFY
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.scify.talkandplay.gui.grid.entertainment;

import java.util.ArrayList;
import javax.swing.JPanel;
import org.scify.talkandplay.gui.grid.BaseGridPanel;
import org.scify.talkandplay.gui.grid.GridFrame;
import org.scify.talkandplay.gui.grid.tiles.TileAction;
import org.scify.talkandplay.gui.helpers.UIConstants;
import org.scify.talkandplay.models.User;
import org.scify.talkandplay.utils.ImageResource;
import org.scify.talkandplay.utils.ResourceType;

public class EntertainmentPanel extends BaseGridPanel {

    public EntertainmentPanel(User user, GridFrame parent) {
        super(user, parent);

        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 414, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() {
        UIConstants.getInstance().setRows(2);
        UIConstants.getInstance().setColumns(3);
        initLayout();

        panelList = new ArrayList<>();

        JPanel musicPanel = createMusicItem();
        JPanel videoPanel = createVideoItem();
        JPanel backPanel = createBackItem();

        add(musicPanel, c);
        c.gridx++;
        add(videoPanel, c);
        c.gridx++;
        add(backPanel, c);
        panelList.add(musicPanel);
        panelList.add(videoPanel);
        panelList.add(backPanel);

        c.gridy++;
        c.gridx = 0;
        fillWithEmpties();

        revalidate();
        repaint();
        parent.clearGrid();
        parent.addGrid(this);
        parent.revalidate();
        parent.repaint();

        selector.setList(panelList);
        selector.start();
    }

    private JPanel createMusicItem() {
        JPanel panel = tileCreator.create(user.getEntertainmentModule().getMusicModule().getName(),
                user.getEntertainmentModule().getMusicModule().getImageResource(),
                user.getEntertainmentModule().getMusicModule().getSound(),
                new TileAction() {
                    @Override
                    public void act() {
                        selector.cancel();
                    }

                    @Override
                    public void audioFinished() {
                        showMusic();
                    }
                });

        return panel;
    }

    private JPanel createVideoItem() {
        JPanel panel = tileCreator.create(user.getEntertainmentModule().getVideoModule().getName(),
                user.getEntertainmentModule().getVideoModule().getImageResource(),
                user.getEntertainmentModule().getVideoModule().getSound(),
                new TileAction() {
                    @Override
                    public void act() {
                        selector.cancel();
                    }

                    @Override
                    public void audioFinished() {
                        showVideo();
                    }
                });

        return panel;
    }

    private JPanel createBackItem() {
        JPanel panel = tileCreator.create(rm.getTextOfXMLTag("backButton"),
                new ImageResource("back-icon.png", ResourceType.JAR),
                null,
                new TileAction() {
                    @Override
                    public void act() {
                        selector.cancel();
                        showMainMenu();
                    }

                    @Override
                    public void audioFinished() {
                        return;
                    }

                    @Override
                    public boolean mute() {
                        return true;
                    }
                });

        return panel;
    }

    private void showMusic() {
        MusicPanel musicPanel = new MusicPanel(user, parent);
        parent.clearGrid();
        parent.addGrid(musicPanel);
    }

    private void showVideo() {
        VideoPanel videoPanel = new VideoPanel(user, parent);
        parent.clearGrid();
        parent.addGrid(videoPanel);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
